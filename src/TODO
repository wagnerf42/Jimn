

- sort holes in holed_pocket and paths inside pockets ! -> hash will be ok
else we can also keep it as a kind of "best effort"
-> sorting could be enforced in pockets building algorithms ????


- check everywhere class attributes are accessed read-only through self
or else they just downgrade to instance attributes
- lots of TODO in inclusion_tree
- change pockets hash to hash directly by id
		-> will simplify code in offsetter and pocket_tree
	=> pockets are hashed in the path cache

SPLIT AT SEEMS NOT OK WITH REVERSED ARCS


-----> simplify jimn.segment.remove_overlap_with

- warning in poly builder if two paths leaving a point have an extremely small angle between them
- better docs for new pocket builder
- check if vertical intersections are still needed in arcs
- check that we decompress the branch after the whole path for
the branch has been created
- check we can remove arcs from envelope
- bug for cordoba 0.5 0.02


 * large goals

- jimn.tree.polygon_tree.is_translation_of

- re-think meaning of border : what do we NEED to mill ? what CAN we mill ?
	-> maybe in relation with second pass

 * code review

- more tests are needed for polygon simplification
especially testing flat subparts

 * minor code improvements (readability)
 * minor code improvements (performance)
 * additional non-regression tests
 * misc

- profiling
- test ascii stl loader
- is_above_y : arcs ???
- elementary_path : is_same : what about arcs ?? is it needed ?
- path compression
- generate paths to have more compression feasible
- hardware : better machines : faster on milling axis used :-)

 * calibration

- what precision should be chosen in stl to round z coordinates ?
- area_limit in poly builder

 * doc

- rapport : inclusion tree

 * bug fixes

- edges in both directions are displayed twice

- there is a bug in pocket inclusion
-> will not work in following case :

  +--------------+
  |              |
  +--**------+   |
     **      |   |
     **      |   |
  +--**------+   |
  |              |
  +--------------+

 here all points of * are inside the other one
 yet * is not included in other
 -> either fix it or ensures this case can not happen
